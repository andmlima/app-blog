name: CI-CD

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

jobs:
  CI:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   packages: write
    #   id-token: write
    #   security-events: write

    steps:
    - name: Obtendo o código
      uses: actions/checkout@v3
      
    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_PWD}}

    - name: Construção da imagem Docker worker
      uses: docker/build-push-action@v5.0.0
      with: 
        context: ./src
        file: ./src/Dockerfile
        push: true     #set to "false" if you will use Trivy
        tags: |
          andmlima/app-blog:${{github.run_number}}
          andmlima/app-blog:latest                

#     - name: Run Trivy vulnerability scanner
#       uses: aquasecurity/trivy-action@0.16.1
#       with:
#         image-ref: andmlima/app-blog:${{github.run_number}}
#         format: 'sarif'
#         output: 'trivy-results.sarif'
#         exit-code: 0
#         severity: UNKNOWN,CRITICAL,HIGH,MEDIUM,LOW

#     - name: Upload Trivy scan results to GitHub Security tab
#       uses: github/codeql-action/upload-sarif@v2
#       with:
#         sarif_file: 'trivy-results.sarif'

#     - name: Enviando a imagem
#       run: |
#         docker push andmlima/app-blog:${{github.run_number}}
#         docker push andmlima/app-blog:latest
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps: 
      - uses: actions/checkout@v3.1.0
      
      - name: Definindo o context
        uses: Azure/k8s-set-context@v3.0
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.K8S_CONFIG}}
          
      - name: Deploy to K8s
        uses: Azure/k8s-deploy@v4
        with: 
          images: andmlima/app-blog:${{github.run_number}}
          manifests: |
            k8s/deployment.yaml         
